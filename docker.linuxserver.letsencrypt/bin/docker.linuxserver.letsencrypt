#!/bin/sh

name="$(basename $0)"
. /etc/profile

if [ -f /storage/.cache/timezone ]; then
 . /storage/.cache/timezone
else
 TIMEZONE="America/New_York"
fi

oe_setup_addon "$name"

#get arch variable from os
LEARCHVAR=`sed -e '/LIBREELEC_ARCH/ !d' -e 's/[^.]*\.\([^"]*\).*/\1/' /etc/os-release`

#figure out which docker hub image to use
if [ "$LEARCHVAR" = "x86_64" ]; then
  DOCKERIMAGE="linuxserver/letsencrypt"
elif [ "$LEARCHVAR" = "arm" ]; then
  DOCKERIMAGE="lsioarmhf/letsencrypt"
elif [ "$LEARCHVAR" = "aarch64" ]; then
  DOCKERIMAGE="lsioarmhf/letsencrypt-aarch64"
fi

#figure out if dns plugin should be selected
if [ "$E_validation" = "dns" ]; then
  OPTDNSPLUGIN="-e DNSPLUGIN=${E_dnsplugin}"
fi

#figure out if email should be used
if [ "$E_email_bool" = "true" ]; then
  OPTEMAIL="-e EMAIL=${E_email}"
fi

#figure out if port 80 should be mapped
if [ "$P_port2_bool" = "true" ]; then
  OPTPORT80="-p ${P_port2}:80"
fi

# add image to cron updater list
if [ ! -f /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh ]; then
  sleep 10
fi

if ! grep -q "$DOCKERIMAGE" /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh; then
  echo "/storage/.kodi/addons/service.system.docker/bin/docker pull $DOCKERIMAGE" >> /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh
fi

docker rm "$name" 2>/dev/null
docker rmi $(docker images | grep "$DOCKERIMAGE" | grep '<none>' | sed 's/\s\+/\t/g' | cut -f3) 2> /dev/null
docker run --name="$name" \
           --rm \
           --cap-add=NET_ADMIN \
           -e WARNING_MSG="DO NOT CONTROL THIS IN PORTAINER!" \
           -e PUID="65534" \
           -e PGID="100" \
           -e TZ="$TIMEZONE" \
           -v "$V_config":/config \
           -p "$P_port":443 \
           ${OPTPORT80} \
           -e URL="$E_url" \
           -e SUBDOMAINS="$E_subd" \
           -e VALIDATION="$E_validation" \
           ${OPTDNSPLUGIN} \
           ${OPTEMAIL} \
           --network=lsio \
           --network-alias=letsencrypt \
           "$DOCKERIMAGE":latest
