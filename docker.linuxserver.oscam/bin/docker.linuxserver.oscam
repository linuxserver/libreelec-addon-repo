#!/bin/sh

name="oscam"
servicename="$(basename $0)"
. /etc/profile

if [ -f /storage/.cache/timezone ]; then
 . /storage/.cache/timezone
else
 TIMEZONE="America/New_York"
fi

oe_setup_addon "$servicename"

#get arch variable from os
LEARCHVAR=`sed -e '/EELEC_ARCH/ !d' -e 's/[^.]*\.\([^"]*\).*/\1/' /etc/os-release`

#figure out number of devices to use
D_devices=""
if [ "$D_device1e" = "true" ]; then
  D_devices="--device=${D_device1} -p ${P_portd1}:${P_portd1}"
  if [ "$D_device2e" = "true" ]; then
    D_devices="$D_devices --device=${D_device2} -p ${P_portd2}:${P_portd2}"
    if [ "$D_device3e" = "true" ]; then
      D_devices="$D_devices --device=${D_device3} -p ${P_portd3}:${P_portd3}"
      if [ "$D_device4e" = "true" ]; then
        D_devices="$D_devices --device=${D_device4} -p ${P_portd4}:${P_portd4}"
      fi
    fi
  fi
fi

DOCKERIMAGE="linuxserver/oscam"

ARCH=$(grep LIBREELEC_ARCH /etc/os-release | sed -E 's|.*\.(.*)"|\1|')
if [ "${ARCH}" = "arm" ]; then
  echo '
  **************************************************************
  **************************************************************
  ****            You are using 32 bit userspace            ****
  ****       Linuxserver has deprecated 32 bit images       ****
  **** https://info.linuxserver.io/issues/2023-07-01-armhf/ ****
  ****         This addon will not run on your system       ****
  **************************************************************
  **************************************************************'
  sleep infinity
fi

# add image to cron updater list
if [ ! -f /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh ]; then
  echo "Waiting for Docker Updater Addon to initialize"
  until [ -f /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh ]; do
    sleep 1
  done
  echo "Docker Updater Addon is now initilized"
fi

if ! grep -q "$DOCKERIMAGE" /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh; then
  echo "/storage/.kodi/addons/service.system.docker/bin/docker pull $DOCKERIMAGE" >> /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh
fi

if [ ! -S /run/docker.sock ]; then
  echo "Waiting for docker socket. . ."
  until [ -S /run/docker.sock ]; do
    sleep 1
  done
  echo "Docker socket is now up"
fi

docker rm "$name" 2>/dev/null
docker rmi $(docker images | grep "$DOCKERIMAGE" | grep '<none>' | sed 's/\s\+/\t/g' | cut -f3) 2> /dev/null
docker run --name="$name" \
           --rm \
           --network=lsio \
           -e WARNING_MSG="DO NOT CONTROL THIS IN PORTAINER!" \
           -e PUID="65534" \
           -e PGID="100" \
           -e TZ="$TIMEZONE" \
           -v "$V_config":/config \
           -p "$P_port":8888 \
           ${D_devices} \
           "$DOCKERIMAGE":latest
