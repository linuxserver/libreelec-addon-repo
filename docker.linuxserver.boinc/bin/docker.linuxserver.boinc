#!/bin/sh

name="boinc"
servicename="$(basename $0)"
. /etc/profile

if [ -f /storage/.cache/timezone ]; then
 . /storage/.cache/timezone
else
 TIMEZONE="America/New_York"
fi

oe_setup_addon "$servicename"

#set image name
DOCKERIMAGE="linuxserver/boinc"
DOCKERTAG="latest"
ARCH=$(grep LIBREELEC_ARCH /etc/os-release | sed -E 's|.*\.(.*)"|\1|')
if [ "${ARCH}" = "arm" ]; then
  if [ $(uname -m) = "aarch64" ]; then
    echo '
    **************************************************************
    **************************************************************
    ****            You are using 32 bit userspace            ****
    ****       Linuxserver has deprecated 32 bit images       ****
    **** https://info.linuxserver.io/issues/2023-07-01-armhf/ ****
    ****  This addon will attempt to run the aarch64 version  ****
    **************************************************************
    **************************************************************'
    DOCKERTAG="arm64v8-latest"
  else
    echo '
    **************************************************************
    **************************************************************
    ****            You are using a 32 bit device             ****
    ****       Linuxserver has deprecated 32 bit images       ****
    **** https://info.linuxserver.io/issues/2023-07-01-armhf/ ****
    ****         This addon will not run on your system       ****
    **************************************************************
    **************************************************************'
    sleep infinity
  fi
fi

#set hw transcode options
if [ -d "/dev/dri" ]; then
  D_vaapi_args="--device /dev/dri:/dev/dri"
  echo "/dev/dri found, mapping device"
else
  echo "/dev/dri not found, skipping gpu access"
fi

# add image to cron updater list
if [ ! -f /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh ]; then
  echo "Waiting for Docker Updater Addon to initialize"
  until [ -f /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh ]; do
    sleep 1
  done
  echo "Docker Updater Addon is now initialized"
fi

if ! grep -q "$DOCKERIMAGE" /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh; then
  echo "/storage/.kodi/addons/service.system.docker/bin/docker pull ${DOCKERIMAGE}:${DOCKERTAG}" >> /storage/.kodi/userdata/addon_data/docker.linuxserver.updater/update.sh
fi

if [ ! -S /run/docker.sock ]; then
  echo "Waiting for docker socket. . ."
  until [ -S /run/docker.sock ]; do
    sleep 1
  done
  echo "Docker socket is now up"
fi

docker rm "$name" 2>/dev/null
docker rmi $(docker images | grep "$DOCKERIMAGE" | grep '<none>' | sed 's/\s\+/\t/g' | cut -f3) 2> /dev/null
docker run --name="$name" \
           --rm \
           --network=lsio \
           --hostname="Boinc-LibreELEC" \
           -e WARNING_MSG="DO NOT CONTROL THIS IN PORTAINER!" \
           -e PUID="65534" \
           -e PGID="100" \
           -e TZ="$TIMEZONE" \
           -p "$P_port":8080 \
           -v "$V_config":/config \
           $D_vaapi_args \
           $E_additional \
           "$DOCKERIMAGE":"$DOCKERTAG"
